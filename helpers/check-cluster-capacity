#!/bin/bash

evaluate() {
  if [ $(echo "$1" | bc -l) == "1" ]; then
    return 0
  else
    return 1
  fi
}

mem_is_under_gb() {
  if evaluate "$allocatable_mem < $1"; then
    # echo "Warning - $allocatable_mem < $1 GiB"
    return 0
  else
    # echo "OK - $allocatable_mem >= $1 GiB"
    return 1
  fi
}

cpu_is_under() {
  if evaluate "$allocatable_cpu < $1"; then
    # echo "Warning - $allocatable_cpu < $1"
    return 0
  else
    # echo "OK - $allocatable_cpu >= $1"
    return 1
  fi
}

# Reads output form 
read_cluster_allocatable_capacity() {

  local mem=$(kubectl get node -o jsonpath='{.items[*].status.allocatable.memory}')
  local cpu=$(kubectl get node -o jsonpath='{.items[*].status.allocatable.cpu}')

  # Example mem output for two nodes: '8071424Ki 8071424Ki'
  # Example cpu output for two nodes: '2 2'

  # echo "'$mem'"
  # echo "'$cpu'"

  local mem_bytes=$(echo $mem | sed 's/ / + /g;s/Gi/ * 1024 Mi/g;s/Mi/ * 1024 Ki/g;s/Ki/ * 1024/g; ' | bc)
  local mem_gb=$(echo "scale=1; $mem_bytes / 1024 / 1024 / 1024" | bc)

  # echo "'$mem_bytes'"
  # echo "'$mem_gb'"

  local total_cpu=$(echo $cpu | sed 's/ / + /g;' | bc)
  # echo "'$total_cpu'"

  # Set global vars
  allocatable_mem=$mem_gb
  allocatable_cpu=$total_cpu
}

# -- Main --

minimum_cpu=1
minimum_mem=7.5
recommended_cpu=2
recommended_mem=12

read_cluster_allocatable_capacity

echo
echo "Kubernetes cluster '$(kubectl config current-context)' appears to have the following capacity:"
echo "  CPU:    $allocatable_cpu"
echo "  Memory: $allocatable_mem GiB"
echo

echo "Requirements:"
echo "  CPU:    $minimum_cpu required ($recommended_cpu recommended)"
echo "  Memory: $minimum_mem GiB required ($recommended_mem GiB recommended)"
echo

min_reqs_met=1
recommended_reqs_met=1

# Check capacity conditions
if cpu_is_under $minimum_cpu; then
  min_reqs_met=
fi

if cpu_is_under $recommended_cpu; then
  recommended_reqs_met=
fi

if mem_is_under_gb $minimum_mem; then
  min_reqs_met=
fi

if mem_is_under_gb $recommended_mem; then
  recommended_reqs_met=
fi

if [ ! $min_reqs_met ]; then

  echo "Error - insufficient CPU/Memory capacity!"
  echo
  echo "Cluster '$(kubectl config current-context)' does not appear to meet the minimum resource requirements for CPU and Memory."
  echo "Please provide additional CPU and/or Memory and re-try the installation."
  echo
  exit 1

elif [ ! $recommended_reqs_met ]; then
  echo "Warning - Minimum recommended CPU/Memory capacity specifications have been met, however, it is recommended that you have at least $recommended_mem GiB memory and $recommended_cpu CPUs."
  exit 10
else
  echo "OK - Minimum and recommended CPU/memory requirements met"
  exit 0
fi
